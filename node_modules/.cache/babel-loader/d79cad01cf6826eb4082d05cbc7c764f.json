{"ast":null,"code":"var _jsxFileName = \"/Users/pansani_/Documents/Coding/AfterReact/food-order-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.item.concat(action.items);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  ;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemHandler = item => {\n    dispatchCartState({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCartState({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/pansani_/Documents/Coding/AfterReact/food-order-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","item","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartState","addItemHandler","removeItemHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA0B;AACtB,UAAMC,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAWC,MAAX,CAAkBJ,MAAM,CAACJ,KAAzB,CAArB;AACA,UAAMS,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYG,KAAZ,GAAoBN,MAAM,CAACG,IAAP,CAAYI,MAA/E;AACA,WAAO;AACHX,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AAAA;AACJ,CATD;;AAWA,MAAMG,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAiClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAjD;;AAEA,QAAMiB,cAAc,GAAGT,IAAI,IAAI;AAC3BQ,IAAAA,iBAAiB,CAAC;AAACV,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMU,iBAAiB,GAAGC,EAAE,IAAI;AAC5BH,IAAAA,iBAAiB,CAAC;AAACV,MAAAA,IAAI,EAAE,QAAP;AAAiBa,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADD;AAEhBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAEJ,cAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzBD;;GAAMV,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n    items: [],\n    totalAmount: 0\n}\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD'){\n        const updatedItems = state.item.concat(action.items);\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    };\n}\n\nconst CartProvider = props => {\n\n    const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState)\n\n    const addItemHandler = item => {\n        dispatchCartState({type: 'ADD', item: item});\n    };\n\n    const removeItemHandler = id => {\n        dispatchCartState({type: 'REMOVE', id: id});\n    };\n    \n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemHandler,\n        removeItem: removeItemHandler,\n    }\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n\n};\n\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}